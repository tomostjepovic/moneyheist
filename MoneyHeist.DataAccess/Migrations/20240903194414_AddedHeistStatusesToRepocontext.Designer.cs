// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoneyHeist.DataAccess;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MoneyHeist.DataAccess.Migrations
{
    [DbContext(typeof(RepoContext))]
    [Migration("20240903194414_AddedHeistStatusesToRepocontext")]
    partial class AddedHeistStatusesToRepocontext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MoneyHeist.Data.Entities.Gender", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("ID")
                        .HasName("pk_genders");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_genders_name");

                    b.ToTable("genders", (string)null);
                });

            modelBuilder.Entity("MoneyHeist.Data.Entities.Heist", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("end");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("location");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start");

                    b.Property<int>("StatusID")
                        .HasColumnType("integer")
                        .HasColumnName("status_id");

                    b.HasKey("ID")
                        .HasName("pk_heists");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_heists_name");

                    b.HasIndex("StatusID")
                        .HasDatabaseName("ix_heists_status_id");

                    b.ToTable("heists", (string)null);
                });

            modelBuilder.Entity("MoneyHeist.Data.Entities.HeistStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<bool>("IsFinished")
                        .HasColumnType("boolean")
                        .HasColumnName("is_finished");

                    b.Property<bool>("IsInProgress")
                        .HasColumnType("boolean")
                        .HasColumnName("is_in_progress");

                    b.Property<bool>("IsInitial")
                        .HasColumnType("boolean")
                        .HasColumnName("is_initial");

                    b.Property<bool>("IsPlanning")
                        .HasColumnType("boolean")
                        .HasColumnName("is_planning");

                    b.Property<bool>("IsReady")
                        .HasColumnType("boolean")
                        .HasColumnName("is_ready");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("ID")
                        .HasName("pk_heist_statuses");

                    b.ToTable("heist_statuses", (string)null);
                });

            modelBuilder.Entity("MoneyHeist.Data.Entities.HeistToSkill", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("HeistID")
                        .HasColumnType("integer")
                        .HasColumnName("heist_id");

                    b.Property<int>("Level")
                        .HasColumnType("integer")
                        .HasColumnName("level");

                    b.Property<int>("Members")
                        .HasColumnType("integer")
                        .HasColumnName("members");

                    b.Property<int>("SkillID")
                        .HasColumnType("integer")
                        .HasColumnName("skill_id");

                    b.HasKey("ID")
                        .HasName("pk_heist_to_skills");

                    b.HasIndex("SkillID")
                        .HasDatabaseName("ix_heist_to_skills_skill_id");

                    b.HasIndex("HeistID", "SkillID", "Level")
                        .IsUnique()
                        .HasDatabaseName("ix_heist_to_skills_heist_id_skill_id_level");

                    b.ToTable("heist_to_skills", (string)null);
                });

            modelBuilder.Entity("MoneyHeist.Data.Entities.Member", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<int>("GenderID")
                        .HasColumnType("integer")
                        .HasColumnName("gender_id");

                    b.Property<int?>("MainSkillID")
                        .HasColumnType("integer")
                        .HasColumnName("main_skill_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("StatusID")
                        .HasColumnType("integer")
                        .HasColumnName("status_id");

                    b.HasKey("ID")
                        .HasName("pk_members");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_members_email");

                    b.HasIndex("GenderID")
                        .HasDatabaseName("ix_members_gender_id");

                    b.HasIndex("MainSkillID")
                        .HasDatabaseName("ix_members_main_skill_id");

                    b.HasIndex("StatusID")
                        .HasDatabaseName("ix_members_status_id");

                    b.ToTable("members", (string)null);
                });

            modelBuilder.Entity("MoneyHeist.Data.Entities.MemberStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<bool>("CanParticipateInHeist")
                        .HasColumnType("boolean")
                        .HasColumnName("can_participate_in_heist");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("ID")
                        .HasName("pk_member_statuses");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_member_statuses_name");

                    b.ToTable("member_statuses", (string)null);
                });

            modelBuilder.Entity("MoneyHeist.Data.Entities.MemberToSkill", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("Level")
                        .HasColumnType("integer")
                        .HasColumnName("level");

                    b.Property<int>("MemberID")
                        .HasColumnType("integer")
                        .HasColumnName("member_id");

                    b.Property<int>("SkillID")
                        .HasColumnType("integer")
                        .HasColumnName("skill_id");

                    b.HasKey("ID")
                        .HasName("pk_member_to_skills");

                    b.HasIndex("SkillID")
                        .HasDatabaseName("ix_member_to_skills_skill_id");

                    b.HasIndex("MemberID", "SkillID")
                        .IsUnique()
                        .HasDatabaseName("ix_member_to_skills_member_id_skill_id");

                    b.ToTable("member_to_skills", (string)null);
                });

            modelBuilder.Entity("MoneyHeist.Data.Entities.Skill", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("ID")
                        .HasName("pk_skills");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_skills_name");

                    b.ToTable("skills", (string)null);
                });

            modelBuilder.Entity("MoneyHeist.Data.Entities.Heist", b =>
                {
                    b.HasOne("MoneyHeist.Data.Entities.HeistStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_heists_heist_statuses_status_id");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("MoneyHeist.Data.Entities.HeistToSkill", b =>
                {
                    b.HasOne("MoneyHeist.Data.Entities.Heist", "Heist")
                        .WithMany("Skills")
                        .HasForeignKey("HeistID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_heist_to_skills_heists_heist_id");

                    b.HasOne("MoneyHeist.Data.Entities.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_heist_to_skills_skills_skill_id");

                    b.Navigation("Heist");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("MoneyHeist.Data.Entities.Member", b =>
                {
                    b.HasOne("MoneyHeist.Data.Entities.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_members_genders_gender_id");

                    b.HasOne("MoneyHeist.Data.Entities.Skill", "MainSkill")
                        .WithMany()
                        .HasForeignKey("MainSkillID")
                        .HasConstraintName("fk_members_skills_main_skill_id");

                    b.HasOne("MoneyHeist.Data.Entities.MemberStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_members_member_statuses_status_id");

                    b.Navigation("Gender");

                    b.Navigation("MainSkill");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("MoneyHeist.Data.Entities.MemberToSkill", b =>
                {
                    b.HasOne("MoneyHeist.Data.Entities.Member", "Member")
                        .WithMany("Skills")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_member_to_skills_members_member_id");

                    b.HasOne("MoneyHeist.Data.Entities.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_member_to_skills_skills_skill_id");

                    b.Navigation("Member");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("MoneyHeist.Data.Entities.Heist", b =>
                {
                    b.Navigation("Skills");
                });

            modelBuilder.Entity("MoneyHeist.Data.Entities.Member", b =>
                {
                    b.Navigation("Skills");
                });
#pragma warning restore 612, 618
        }
    }
}
